"""Initial database schema

Revision ID: ce8f50213406
Revises:
Create Date: 2025-10-22 12:19:52.078191

"""
from typing import Sequence, Union
import sys
import os

# Add parent directory to path
sys.path.insert(0, os.path.abspath(os.path.join(os.path.dirname(__file__), '../..')))

from alembic import op
import sqlalchemy as sa
from backend.database.models import JSONEncodedDict


# revision identifiers, used by Alembic.
revision: str = 'ce8f50213406'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('code_submissions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('submission_id', sa.String(length=50), nullable=False),
    sa.Column('code', sa.Text(), nullable=False),
    sa.Column('test_inputs', JSONEncodedDict(), nullable=True),
    sa.Column('analysis_summary', JSONEncodedDict(), nullable=True),
    sa.Column('generation_metadata', JSONEncodedDict(), nullable=True),
    sa.Column('errors', JSONEncodedDict(), nullable=True),
    sa.Column('warnings', JSONEncodedDict(), nullable=True),
    sa.Column('status', sa.Enum('pending', 'analyzed', 'completed', 'failed', name='submissionstatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('max_questions', sa.Integer(), nullable=False),
    sa.Column('strategy', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_code_submissions_submission_id'), 'code_submissions', ['submission_id'], unique=True)
    op.create_table('questions',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('question_id', sa.String(length=50), nullable=False),
    sa.Column('submission_id', sa.String(length=50), nullable=False),
    sa.Column('template_id', sa.String(length=100), nullable=False),
    sa.Column('question_text', sa.Text(), nullable=False),
    sa.Column('question_type', sa.Enum('multiple_choice', 'fill_in_blank', 'true_false', 'short_answer', 'numeric', 'code_selection', name='questiontype'), nullable=False),
    sa.Column('question_level', sa.Enum('atom', 'block', 'relational', 'macro', name='questionlevel'), nullable=False),
    sa.Column('answer_type', sa.String(length=50), nullable=False),
    sa.Column('correct_answer', JSONEncodedDict(), nullable=False),
    sa.Column('answer_choices', JSONEncodedDict(), nullable=True),
    sa.Column('context', JSONEncodedDict(), nullable=True),
    sa.Column('explanation', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.String(length=20), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=False),
    sa.ForeignKeyConstraint(['submission_id'], ['code_submissions.submission_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_questions_question_id'), 'questions', ['question_id'], unique=True)
    op.create_table('answers',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('answer_id', sa.String(length=50), nullable=False),
    sa.Column('submission_id', sa.String(length=50), nullable=False),
    sa.Column('question_id', sa.String(length=50), nullable=False),
    sa.Column('student_answer', JSONEncodedDict(), nullable=False),
    sa.Column('is_correct', sa.Boolean(), nullable=True),
    sa.Column('score', sa.Float(), nullable=True),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('submitted_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('graded_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['question_id'], ['questions.question_id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['submission_id'], ['code_submissions.submission_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_answers_answer_id'), 'answers', ['answer_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_answers_answer_id'), table_name='answers')
    op.drop_table('answers')
    op.drop_index(op.f('ix_questions_question_id'), table_name='questions')
    op.drop_table('questions')
    op.drop_index(op.f('ix_code_submissions_submission_id'), table_name='code_submissions')
    op.drop_table('code_submissions')
    # ### end Alembic commands ###
